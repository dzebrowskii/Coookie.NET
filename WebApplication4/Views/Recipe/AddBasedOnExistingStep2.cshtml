@{
    ViewData["Title"] = "Add Recipe Based on Existing";
    var existingRecipe = ViewBag.ExistingRecipe;
}

<h2>@ViewData["Title"]</h2>

<p>Creating a new recipe based on: <strong>@existingRecipe.Name</strong></p>

<form method="post" asp-action="SaveBasedOnExisting" id="recipeForm">
    <input type="hidden" name="ExistingRecipeId" value="@existingRecipe.Id" />

    <div class="form-group">
        <label for="Name">New Recipe Name</label>
        <input type="text" class="form-control" id="Name" name="Name" required />
    </div>
    <div class="form-group">
        <label>Existing Ingredients</label>
        <ul id="existingIngredients">
            @foreach (var recipeIngredient in existingRecipe.RecipeIngredients)
            {
                <li>
                    <span class="ingredient-name">@recipeIngredient.Ingredient.Name</span>
                    <input type="hidden" name="ExistingIngredients" value="@recipeIngredient.Ingredient.Name" />
                    <button type="button" class="btn btn-danger btn-sm remove-ingredient" onclick="removeIngredient(this)">x</button>
                </li>
            }
        </ul>
    </div>
    <div class="form-group">
        <label for="NewIngredients">New Ingredients (comma-separated)</label>
        <input type="text" class="form-control" id="NewIngredients" name="NewIngredients" />
    </div>
    <div class="form-group">
        <label for="Description">Description</label>
        <textarea class="form-control" id="Description" name="Description" rows="5">@existingRecipe.Description</textarea>
    </div>
    <div class="form-group">
        <label for="Calories">Calories</label>
        <input type="number" class="form-control" id="Calories" name="Calories" />
    </div>
    <div class="form-group">
        <label for="Price">Price</label>
        <input type="number" step="0.01" class="form-control" id="Price" name="Price" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</form>

<a href="@Url.Action("Menu", "Recipe")" class="btn btn-secondary">Go Back</a>

@section Scripts {
    <script>
        function removeIngredient(button) {
            var li = button.parentElement;
            li.remove();
        }

        document.getElementById('recipeForm').addEventListener('submit', function (event) {
            var ingredients = document.querySelectorAll('#existingIngredients li');
            ingredients.forEach(function (ingredient) {
                if (!ingredient.querySelector('.ingredient-name')) {
                    ingredient.remove();
                }
            });
        });
    </script>
}

<style>
    .remove-ingredient {
        margin-left: 10px;
        padding: 2px 5px;
        font-size: 0.8em;
    }
    .menu-item {
        color: black; /* Ustawia kolor tekstu na czarny */
        text-decoration: none; /* Usuwa podkreślenie */
    }
    
    .menu-item:hover {
        color: white; /* Opcjonalnie zmienia kolor tekstu na biały po najechaniu */
        text-decoration: none; /* Upewnia się, że nie pojawi się podkreślenie po najechaniu */
    }
</style>
